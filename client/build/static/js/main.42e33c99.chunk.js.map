{"version":3,"sources":["components/login.jsx","components/project.jsx","components/filter.jsx","components/filters.jsx","components/projects.jsx","components/main.jsx","App.jsx","serviceWorker.js","index.js"],"names":["Login","state","value","username","password","error","removeError","e","_this","setState","handleSubmit","url","data","preventDefault","passphrase","fetch","method","headers","Content-Type","body","JSON","stringify","then","res","json","console","log","success","props","changePage","handleUsernameChange","target","handlePasswordChange","err","this","react_default","a","createElement","class","className","onClick","onSubmit","type","name","placeholder","onChange","Component","Project","src","image","alt","href","webpage","title","content","link","Filter","enabled","addFilter","removeFilter","Filters","_this2","filters","map","element","id","filter","key","Projects","projects","renderedProjects","activatedFilters","updateFilters","length","every","val","technologies","includes","newArray","push","components_filters","component","components_project","Main","Link","to","App","BrowserRouter","Switch","Route","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.42e33c99.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport '../css/login.css';\r\nclass Login extends Component {\r\n\tstate = { value: '', username: '', password: '', error: false };\r\n\tremoveError = (e) =>\r\n\t{\r\n\t\tthis.setState({error:false})\r\n\t}\r\n\trender() {\r\n\t\tconst err = this.state.error ? (\r\n\t\t\t<div class=\"alert\">\r\n\t\t\t\t<span className=\"closebtn\" onClick={this.removeError}>\r\n\t\t\t\t\t&times;\r\n\t\t\t\t</span>\r\n\t\t\t\t<strong>Wrong Credentials</strong> Please enter username and password again!\r\n\t\t\t</div>\r\n\t\t) : (\r\n\t\t\t''\r\n\t\t);\r\n\t\treturn (\r\n\t\t\t<div className=\"login\">\r\n\t\t\t\t<form onSubmit={this.handleSubmit}>\r\n\t\t\t\t\t<div className=\"inputbox\">\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\tclassName=\"inputdata\"\r\n\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\tname=\"username\"\r\n\t\t\t\t\t\t\tplaceholder=\"Username\"\r\n\t\t\t\t\t\t\tonChange={this.handleUsernameChange}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"inputbox \">\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\tclassName=\"inputdata\"\r\n\t\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\t\tname=\"pass\"\r\n\t\t\t\t\t\t\tplaceholder=\"Password\"\r\n\t\t\t\t\t\t\tonChange={this.handlePasswordChange}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<span className=\"focus-input100\" />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<input className=\"submit\" type=\"submit\" value=\"Login\" />\r\n\t\t\t\t</form>\r\n\t\t\t\t{err}\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\r\n\thandleSubmit = (e) => {\r\n\t\te.preventDefault();\r\n\t\tpostJsonData('/authenticate', { username: this.state.username, passphrase: this.state.password })\r\n\t\t\t.then((res) => res.json())\r\n\t\t\t.then((res) => {\r\n\t\t\t\tconsole.log(res);\r\n\t\t\t\tif (res.success) {\r\n\t\t\t\t\tthis.props.changePage('dashboard');\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.setState({error:true});\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t};\r\n\thandleUsernameChange = (e) => {\r\n\t\tthis.setState({ username: e.target.value });\r\n\t};\r\n\thandlePasswordChange = (e) => {\r\n\t\tthis.setState({ password: e.target.value });\r\n\t};\r\n}\r\nfunction postJsonData(url, data) {\r\n\treturn fetch(url, {\r\n\t\tmethod: 'POST',\r\n\t\theaders: {\r\n\t\t\t'Content-Type': 'application/json; charset=utf-8'\r\n\t\t},\r\n\t\tbody: JSON.stringify(data)\r\n\t});\r\n}\r\nexport default Login;\r\n","import React, { Component } from 'react';\r\nimport '../css/project.css';\r\nclass Project extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"project fade-in\">\r\n\t\t\t\t<div className=\"image\">\r\n\t\t\t\t\t<img className=\"image\" src={'/images/'+this.props.image + '.jpg'} alt=\"\" />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"content\">\r\n\t\t\t\t\t<a href={this.props.webpage}>\r\n\t\t\t\t\t\t<h3>{this.props.title}</h3>\r\n\t\t\t\t\t</a>\r\n\t\t\t\t\t<p>{this.props.content}</p>\r\n\t\t\t\t\t<a href={this.props.link} className=\"button alt\">\r\n\t\t\t\t\t\t<p>Code</p>\r\n\t\t\t\t\t</a>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Project;\r\n","import React, { Component } from 'react';\r\nimport '../css/filters.css';\r\nclass Filter extends Component {\r\n\tstate = { enabled: false };\r\n\trender() {\r\n\t\t\treturn (\r\n\t\t\t<div className={this.state.enabled ? 'filter-enabled flex-row fade-in' : 'filter flex-row fade-in'} onClick={this.addFilter}>\r\n\t\t\t\t<span className=\"filter-text\"> {this.props.name}</span>\r\n\t\t\t\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\t\r\n\taddFilter = (e) => {\r\n\t\te.preventDefault();\r\n\t\tif (!this.state.enabled) {\r\n\t\t\te.preventDefault();\r\n\t\t\tthis.setState({ enabled: true});\r\n\t\t\tthis.props.addFilter(this.props.name);\r\n\t\t}\r\n\t\tif (this.state.enabled) {\r\n\t\t\tthis.setState({ enabled: false });\r\n\t\t\tthis.props.removeFilter(this.props.name);\r\n\t\t}\r\n\r\n\t};\r\n}\r\nexport default Filter;\r\n","import React, { Component } from 'react';\r\nimport '../css/filters.css'\r\nimport Filter from './filter'\r\nclass Filters extends Component {\r\n\tstate = { enabled: false };\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"filter-container flex-row\">\r\n\t\t\t\t{this.props.filters.map((element,id) => {\r\n\t\t\t\t\treturn(<Filter name={element} addFilter={this.props.addFilter} key={id} removeFilter={this.props.removeFilter} />);\r\n\t\t\t\t})}\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Filters;\r\n","import React, { Component } from 'react'\r\nimport Project from './project'\r\nimport Filters from './filters'\r\nimport '../css/projects.css'\r\nimport { CSSTransitionGroup } from 'react-transition-group'\r\n\r\nclass Projects extends Component\r\n{\r\n\tstate = {\r\n\t\tprojects: [],\r\n\t\trenderedProjects: [],\r\n\t\tfilters: [ 'HTML', 'CSS', 'Javascript', 'Node', 'Express', 'React', 'MongoDB', 'Bootstrap', 'C#', 'Unity',\"Python\",\"Java\",\"C\"],\r\n\t\tactivatedFilters:[]\r\n\t};\r\n\r\n\trender()\r\n\t{\r\n\t\treturn(\r\n\t\t\t<div class=\"pad-100\">\r\n\t\t\t<Filters filters={this.state.filters} addFilter={this.addFilter} removeFilter={this.removeFilter} />\r\n\r\n\t\t\t\t<div className=\"projects\" component='div'>\r\n\t\t\t\t{this.state.renderedProjects.map((element) => {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<Project\r\n\t\t\t\t\t\ttitle={element.title}\r\n\t\t\t\t\t\tcontent={element.content}\r\n\t\t\t\t\t\tlink={element.link}\r\n\t\t\t\t\t\ttechnologies={element.technologies}\r\n\t\t\t\t\t\timage={element.title}\r\n\t\t\t\t\t\tkey={element.id}\r\n\t\t\t\t\t\twebpage={element.webpage}\r\n\t\t\t\t\t/>\r\n\t\t\t\t)}\r\n\t\t\t)\r\n\t\t}\r\n\t\t\t</div>\r\n\r\n\t\t\t</div>)\r\n\r\n\t}\r\n\tupdateFilters = () => {\r\n\t\tthis.setState(\r\n\t\t\t{\r\n\t\t\t\trenderedProjects: this.state.projects.filter((element) => {\r\n\t\t\t\t\tif (this.state.activatedFilters.length == 0) {\r\n\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn this.state.activatedFilters.every((val) => element.technologies.includes(val));\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t);\r\n\t};\r\n\taddFilter = (filter) => {\r\n\t\tvar newArray = this.state.activatedFilters;\r\n\t\tnewArray.push(filter);\r\n\t\tthis.setState({ activatedFilters: newArray });\r\n\t\tthis.updateFilters();\r\n\t};\r\n\tremoveFilter = (filter) => {\r\n\t\tthis.setState(\r\n\t\t\t{\r\n\t\t\t\tactivatedFilters: this.state.activatedFilters.filter((element) => {\r\n\t\t\t\t\treturn element != filter;\r\n\t\t\t\t})\r\n\t\t\t},\r\n\t\t\t() => this.updateFilters()\r\n\t\t);\r\n\t};\r\n\r\n\tcomponentWillMount() {\r\n\t\tfetch('/api/projects')\r\n\t\t\t.then((res) => res.json())\r\n\t\t\t.then((res) => this.setState({ projects: res, renderedProjects: res }));\r\n\t}\r\n\r\n}\r\nexport default Projects;\r\n","import React, { Component } from 'react'\r\nimport { Link} from \"react-router-dom\";\r\nimport '../App.css';\r\n\r\nclass Main extends Component\r\n{\r\n    render()\r\n    {\r\n        return(<div className=\"App\">\r\n            <div className=\"container-center\">\r\n                <div className=\"title\">\r\n                     Umair Darr\r\n                </div>\r\n                <div className='link-container'>\r\n                <Link to=\"/projects\" className='links'>Projects</Link>\r\n                <Link to=\"/photography\" className='links'>Photography</Link>\r\n                <Link to=\"/blog\" className='links'>Blog</Link>\r\n                <a className='links' href=\"https://github.com/Darruma\">Github</a>\r\n                </div>\r\n            </div>\r\n        </div>)\r\n    }\r\n}\r\nexport default Main;\r\n","import React, { Component } from 'react';\r\nimport Login from './components/login';\r\nimport Projects from './components/projects';\r\nimport Main from './components/main'\r\nimport { BrowserRouter as Router, Route,Switch} from \"react-router-dom\";\r\nclass App extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<Router >\r\n\t\t\t\t<Switch>\r\n\t\t\t\t\t<Route exact path=\"/\" component={Main}/>\r\n\t\t\t\t\t<Route path=\"/login\" component={Login} />\r\n\t\t\t\t\t<Route path=\"/projects\" component={Projects}/>\r\n\t\t\t\t\t<Route path=\"/photography\" component={Projects}/>\r\n\t\t\t\t</Switch>\r\n\t\t\t</Router>\r\n\r\n\t\t);\r\n\t}\r\n \r\n}\r\nexport default App;\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n\r\n              // Execute callback\r\n              if (config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport './index.css';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}